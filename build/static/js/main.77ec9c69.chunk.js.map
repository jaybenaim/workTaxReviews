{"version":3,"sources":["components/NavBar/navbar.module.css","components/NavBar/index.jsx","data/eventList.js","components/Calendar/Calendar.jsx","components/PeriodToClaim/PeriodToClaim.jsx","components/FindDate/FindDate.jsx","components/DisplayPeriods/DisplayPeriods.jsx","components/Clock/Clock.jsx","components/ClockPanel/ClockPanel.jsx","components/Home/Home.jsx","App.jsx","registerServiceWorker.js","components/ErrorPage/index.jsx","components/ErrorBoundary/index.jsx","redux/actions/types.js","redux/reducers/errorReducers.js","redux/reducers/index.js","redux/store.js","index.jsx"],"names":["module","exports","NavBar","Fragment","className","styles","skipLink","href","to","myEventsList","start","Date","end","title","allDay","localizer","momentLocalizer","moment","Calendar","style","height","width","id","events","map","event","i","setDate","getDate","startAccessor","endAccessor","onSelectEvent","e","console","log","PeriodToClaim","date","dateSetBack","dateSelected","marginTop","format","periods","period","p","titles","match","push","key","FindDate","props","useState","setDaysBack","toggleDateSelected","firstTimeApplying","toggleFirstTimeApplying","useEffect","daysBack","handleDateChange","dateValue","firstTime","dateV","amountOfDays","firstTimeApplyPeriod","handleCheckbox","padding","Form","Group","controlId","Control","label","type","onChange","handleChange","target","value","Check","name","defaultChecked","DisplayPeriods","showPeriods","togglePeriods","Button","variant","onClick","Clock","time","ClockPanel","provinces","tz","province","setHours","getHours","setMinutes","getMinutes","Home","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ErrorPage","ErrorBoundary","React","Component","constructor","super","this","hasError","componentDidCatch","errorInfo","render","children","withRouter","initialState","combineReducers","errors","action","payload","loggerMiddleware","createLogger","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.77ec9c69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"skipLink\":\"navbar_skipLink__3TdC_\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./navbar.module.css\";\n\nconst NavBar = () => {\n  return (\n    <React.Fragment>\n      <div className={styles.skipLink}>\n        <a href=\"#mainContent\">Skip to Main Content</a>\n      </div>\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          CERB TAX REVIEW HELPER\n        </Link>\n        <div className=\"navbar-nav\">\n          <Link className=\"nav-item nav-link active\" to=\"/\">\n            Home\n          </Link>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n};\nexport default NavBar;\n","export const myEventsList = [\n  {\n    start: new Date(2020, 2, 15),\n    end: new Date(2020, 3, 11),\n    title: \"Period 1\",\n    allDay: false,\n  },\n  {\n    start: new Date(2020, 3, 12),\n    end: new Date(2020, 4, 9),\n    title: \"Period 2\",\n    allDay: false,\n  },\n  {\n    start: new Date(2020, 4, 10),\n    end: new Date(2020, 5, 6),\n    title: \"Period 3\",\n    allDay: false,\n  },\n  {\n    start: new Date(2020, 5, 7),\n    end: new Date(2020, 6, 4),\n    title: \"Period 4\",\n    allDay: false,\n  },\n  {\n    start: new Date(2020, 6, 5),\n    end: new Date(2020, 7, 1),\n    title: \"Period 5\",\n    allDay: false,\n  },\n  {\n    start: new Date(2020, 7, 2),\n    end: new Date(2020, 7, 29),\n    title: \"Period 6\",\n    allDay: false,\n  },\n  {\n    start: new Date(2020, 7, 30),\n    end: new Date(2020, 8, 26),\n    title: \"Period 7\",\n    allDay: false,\n  },\n];\n","import React from \"react\";\nimport moment from \"moment\";\nimport { myEventsList } from \"../../data/eventList\";\n\nimport { Calendar as BigCalender, momentLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"../../assets/stylesheets/calendar.css\";\n\nconst localizer = momentLocalizer(moment);\n\nconst Calendar = () => {\n  const onSelectEvent = (e) => {\n    console.log(e);\n  };\n  const extendPeriodsToCoverLastDay = () => {\n    return myEventsList.map((event, i) => {\n      event.end.setDate(event.end.getDate() + 1);\n      return event;\n    });\n  };\n  return (\n    <div\n      className=\"container\"\n      style={{ height: \"100%\", width: \"100%\" }}\n      id=\"calendar-section\"\n    >\n      <BigCalender\n        localizer={localizer}\n        events={extendPeriodsToCoverLastDay()}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500 }}\n        onSelectEvent={onSelectEvent}\n      />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { myEventsList as periods } from \"../../data/eventList\";\n\nconst PeriodToClaim = ({ date, dateSetBack, dateSelected }) => {\n  const calculatePeriodsToClaim = () => {\n    let periodsQualifiedFor = periods.map((period, p) => {\n      let titles = [];\n      let newDate = new Date(date);\n\n      if (\n        (newDate >= period.start || dateSetBack >= period.start) &&\n        dateSetBack <= period.end\n      ) {\n        !period.title.match(/[12]/) && titles.push(period.title);\n      } else if (dateSetBack <= periods[1].end) {\n        titles.push(\"We do not cover that period at this time\");\n      }\n\n      return titles;\n    });\n    return periodsQualifiedFor;\n  };\n\n  const periodElements = () => {\n    let periodsQualifiedFor = calculatePeriodsToClaim();\n    return periodsQualifiedFor.map((period, i) => {\n      return (\n        period && (\n          <div className=\"\" key={i}>\n            <strong>{period}</strong>\n          </div>\n        )\n      );\n    });\n  };\n  return (\n    <div className=\"\" style={{ marginTop: \"10px\" }}>\n      {dateSelected && (\n        <>\n          <strong>\n            If the client said they made less than $1000 since{\" \"}\n            {moment(dateSetBack).format(\"MMMM Do YYYY\")}\n          </strong>\n          <div>\n            The client can claim the following periods: <br />{\" \"}\n            {periodElements()}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PeriodToClaim;\n","import React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport PeriodToClaim from \"../PeriodToClaim/PeriodToClaim\";\n\nconst FindDate = (props) => {\n  const [date, setDate] = useState(new Date());\n  const [dateSetBack, setDaysBack] = useState();\n\n  const [dateSelected, toggleDateSelected] = useState(false);\n  const [firstTimeApplying, toggleFirstTimeApplying] = useState(false);\n\n  useEffect(() => {\n    let daysBack = new Date(date.setDate(date.getDate() - 26));\n    setDaysBack(daysBack);\n    // eslint-disable-next-line\n  }, []);\n\n  const handleChange = (dateValue) => {\n    setDate(dateValue);\n    toggleDateSelected(true);\n    handleDateChange(dateValue);\n  };\n\n  const handleDateChange = (dateValue, firstTime) => {\n    let dateV = new Date(dateValue);\n    let amountOfDays = firstTime ? 14 : 28;\n    let firstTimeApplyPeriod = dateV.setDate(\n      dateV.getDate() - (amountOfDays - 2)\n    );\n    setDaysBack(new Date(firstTimeApplyPeriod));\n  };\n\n  const handleCheckbox = (e) => {\n    toggleFirstTimeApplying(!firstTimeApplying);\n    handleDateChange(date, !firstTimeApplying);\n  };\n\n  return (\n    <div className=\"find-date-section\" style={{ padding: \"4%\" }}>\n      <div>Enter the date the client last worked</div>\n      {/* Checkbox for 1st time that will change 14 to 28 days */}\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Control\n            label=\"Date client last worked\"\n            type=\"date\"\n            onChange={(e) => handleChange(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Check\n            type=\"radio\"\n            label=\"First time applying\"\n            name=\"radio\"\n            onChange={(e) => handleCheckbox(e.target)}\n          />\n\n          <Form.Check\n            type=\"radio\"\n            label=\"Client has previously applied for CERB\"\n            name=\"radio\"\n            defaultChecked={true}\n            onChange={(e) => handleCheckbox(e.target)}\n          />\n        </Form.Group>\n      </Form>\n\n      <br />\n\n      {dateSelected && (\n        <div>\n          Ask client: Have you made less than $1000 since{\" \"}\n          {moment(dateSetBack).format(\"LL\")}\n        </div>\n      )}\n\n      {date && (\n        <PeriodToClaim\n          date={date}\n          dateSelected={dateSelected}\n          dateSetBack={dateSetBack}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default FindDate;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { Button } from \"react-bootstrap\";\nimport { myEventsList as periods } from \"../../data/eventList\";\nimport \"../../assets/stylesheets/displayPeriods.css\";\n\nconst DisplayPeriods = () => {\n  const [showPeriods, togglePeriods] = useState(false);\n  const periodElements = () =>\n    periods.map((period, i) => {\n      const { start, end, title } = period;\n      return (\n        <div className=\"period-item\">\n          {title}\n          <p>\n            {moment(start).format(\"MMM Do \")}-{moment(end).format(\"MMM Do \")}\n          </p>\n        </div>\n      );\n    });\n  return (\n    <section className=\"period-section\">\n      <Button\n        variant=\"outline-secondary\"\n        onClick={() => togglePeriods(!showPeriods)}\n      >\n        Show All Periods{\" \"}\n      </Button>\n      {showPeriods && periodElements()}\n    </section>\n  );\n};\n\nexport default DisplayPeriods;\n","import React from \"react\";\nimport \"../../assets/stylesheets/clock.css\";\nimport moment from \"moment\";\n\nconst Clock = ({ date: time }) => {\n  return <div className=\"clock-container\">{moment(time).format(\"LT\")}</div>;\n};\n\nexport default Clock;\n","import React from \"react\";\nimport Clock from \"../Clock/Clock\";\n\nimport \"../../assets/stylesheets/clockPanel.css\";\n\nconst ClockPanel = () => {\n  const provinces = [\n    { name: \"BC\", tz: -3 },\n    { name: \"YT\", tz: -3 },\n    { name: \"AB\", tz: -2 },\n    { name: \"NT\", tz: -2 },\n    { name: \"SK\", tz: -2 },\n    { name: \"MB\", tz: -1 },\n    { name: \"NL\", tz: 1.5 },\n    { name: \"NS\", tz: 1 },\n    { name: \"NB\", tz: 1 },\n    { name: \"PE\", tz: 1 },\n    { name: \"QC\", tz: 0 },\n    { name: \"ON\", tz: 0 },\n  ];\n\n  const clockElements = () => {\n    return provinces.map((province, i) => {\n      let date = new Date();\n      date.setHours(date.getHours() + province.tz);\n      if (province.name === \"Newfoundland\") {\n        date.setMinutes(date.getMinutes() + 30);\n      }\n      return (\n        <div key={i}>\n          <strong>{province.name}</strong> <Clock date={date} />{\" \"}\n        </div>\n      );\n    });\n  };\n  return <div className=\"clock-panel\">{clockElements()}</div>;\n};\n\nexport default ClockPanel;\n","import React from \"react\";\r\nimport Calendar from \"../Calendar/Calendar\";\r\nimport FindDate from \"../FindDate/FindDate\";\r\nimport DisplayPeriods from \"../DisplayPeriods/DisplayPeriods\";\r\nimport ClockPanel from \"../ClockPanel/ClockPanel\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main id=\"mainContent\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center mt-5 p-4\">\r\n          <DisplayPeriods />\r\n          <Calendar />\r\n          <FindDate />\r\n          <ClockPanel />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\n\nimport Home from \"./components/Home/Home\";\nimport Calendar from \"./components/Calendar/Calendar\";\n\n//TODO Web Template Studio: Add routes for your new pages here.\nconst App = () => {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/calendar\" component={Calendar} />\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../assets/stylesheets/errorPage.css\";\n\nconst ErrorPage = () => {\n  return (\n    <div id=\"notfound\">\n      <div className=\"notfound\">\n        <div className=\"notfound-404\">\n          <h1>404</h1>\n        </div>\n        <h2>Oops, The Page you are looking for can't be found!</h2>\n\n        <Link to=\"/\">\n          <span className=\"arrow\"></span>Return To Homepage\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"../ErrorPage\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    // console.log(error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <ErrorPage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ErrorBoundary);\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const SAMPLE_TYPE = \"SAMPLE_TYPE\";\n","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducers\";\n\nexport default combineReducers({\n  errors: errorReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { createLogger } from \"redux-logger\";\n\nconst loggerMiddleware = createLogger();\nconst initialState = {};\nconst middleware = [thunk, loggerMiddleware];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middleware))\n);\nexport default store;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport unregister from \"./registerServiceWorker\";\r\nimport ErrorBoundary from \"./components/ErrorBoundary\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <ErrorBoundary>\r\n        <App />\r\n      </ErrorBoundary>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n/**\r\n * Be aware that the website will only update to the latest version on the 2nd page visit if it as already cached\r\n * Learn more about service workers in React: https://create-react-app.dev/docs/making-a-progressive-web-app\r\n */\r\nunregister();\r\n"],"sourceRoot":""}